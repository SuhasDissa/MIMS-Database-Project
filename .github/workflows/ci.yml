name: CI

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

permissions:
  contents: write

jobs:
  lint:
    runs-on: ubuntu-latest
    environment: Testing
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'

      - name: Add Flux Credentials Loaded From ENV
        run: composer config http-basic.composer.fluxui.dev "${{ secrets.FLUX_USERNAME }}" "${{ secrets.FLUX_LICENSE_KEY }}"

      - name: Install Dependencies
        run: |
          composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
          npm install

      - name: Run Pint
        run: vendor/bin/pint

  tests:
    needs: lint
    runs-on: ubuntu-latest
    environment: Testing
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: laravel
          POSTGRES_USER: laravel
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          tools: composer:v2
          coverage: xdebug

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install Node Dependencies
        run: npm i

      - name: Add Flux Credentials Loaded From ENV
        run: composer config http-basic.composer.fluxui.dev "${{ secrets.FLUX_USERNAME }}" "${{ secrets.FLUX_LICENSE_KEY }}"

      - name: Install PHP Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Copy Environment File
        run: cp .env.example .env

      - name: Update Database Host for CI
        run: sed -i 's/DB_HOST=pgsql/DB_HOST=127.0.0.1/' .env

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Create Testing Database
        run: |
          PGPASSWORD=secret psql -h 127.0.0.1 -U laravel -d laravel -c "CREATE DATABASE testing;"
        env:
          PGPASSWORD: secret

      - name: Run Migrations
        run: php artisan migrate --force

      - name: Build Assets
        run: npm run build

      - name: Run Tests
        run: ./vendor/bin/pest

  deploy:
    needs: tests
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_SSH_HOST }}
          username: ${{ secrets.VPS_SSH_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_SSH_PORT || 22 }}
          source: ".,!.git,!.github,!node_modules,!.env,!storage/framework/sessions/*,!storage/framework/views/*,!storage/framework/cache/data/*,!storage/logs/*.log,!public/storage"
          target: ${{ secrets.VPS_DEPLOY_PATH }}
          strip_components: 0
          overwrite: true

      - name: Run deployment commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_SSH_HOST }}
          username: ${{ secrets.VPS_SSH_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_SSH_PORT || 22 }}
          script: |
            cd ${{ secrets.VPS_DEPLOY_PATH }}
            composer install --no-dev --optimize-autoloader --no-interaction
            npm install
            npm run build
            php artisan migrate --force
            php artisan cache:clear
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan storage:link
            # php artisan queue:restart
